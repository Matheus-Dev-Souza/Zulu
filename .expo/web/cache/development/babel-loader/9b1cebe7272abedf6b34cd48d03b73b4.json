{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { Layout, Text, TextInput, Button, useTheme, themeColor } from \"react-native-rapi-ui\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n  var _useTheme = useTheme(),\n    isDarkmode = _useTheme.isDarkmode,\n    setTheme = _useTheme.setTheme;\n  var auth = getAuth();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  function register() {\n    return _register.apply(this, arguments);\n  }\n  function _register() {\n    _register = _asyncToGenerator(function* () {\n      setLoading(true);\n      yield createUserWithEmailAndPassword(auth, email, password).catch(function (error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        setLoading(false);\n        alert(errorMessage);\n      });\n    });\n    return _register.apply(this, arguments);\n  }\n  return _jsx(KeyboardAvoidingView, {\n    behavior: \"height\",\n    enabled: true,\n    style: {\n      flex: 1\n    },\n    children: _jsx(Layout, {\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: {\n          flexGrow: 1\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100\n          },\n          children: _jsx(Image, {\n            resizeMode: \"contain\",\n            style: {\n              height: 220,\n              width: 220\n            },\n            source: require(\"../../../assets/register.png\")\n          })\n        }), _jsxs(View, {\n          style: {\n            flex: 3,\n            paddingHorizontal: 20,\n            paddingBottom: 20,\n            backgroundColor: isDarkmode ? themeColor.dark : themeColor.white\n          },\n          children: [_jsx(Text, {\n            fontWeight: \"bold\",\n            size: \"h3\",\n            style: {\n              alignSelf: \"center\",\n              padding: 30\n            },\n            children: \"Register\"\n          }), _jsx(Text, {\n            children: \"Email\"\n          }), _jsx(TextInput, {\n            containerStyle: {\n              marginTop: 15\n            },\n            placeholder: \"Enter your email\",\n            value: email,\n            autoCapitalize: \"none\",\n            autoCompleteType: \"off\",\n            autoCorrect: false,\n            keyboardType: \"email-address\",\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            }\n          }), _jsx(Text, {\n            style: {\n              marginTop: 15\n            },\n            children: \"Password\"\n          }), _jsx(TextInput, {\n            containerStyle: {\n              marginTop: 15\n            },\n            placeholder: \"Enter your password\",\n            value: password,\n            autoCapitalize: \"none\",\n            autoCompleteType: \"off\",\n            autoCorrect: false,\n            secureTextEntry: true,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          }), _jsx(Button, {\n            text: loading ? \"Loading\" : \"Create an account\",\n            onPress: function onPress() {\n              register();\n            },\n            style: {\n              marginTop: 20\n            },\n            disabled: loading\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              marginTop: 15,\n              justifyContent: \"center\"\n            },\n            children: [_jsx(Text, {\n              size: \"md\",\n              children: \"Already have an account?\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                navigation.navigate(\"Login\");\n              },\n              children: _jsx(Text, {\n                size: \"md\",\n                fontWeight: \"bold\",\n                style: {\n                  marginLeft: 5\n                },\n                children: \"Login here\"\n              })\n            })]\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              marginTop: 30,\n              justifyContent: \"center\"\n            },\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\n              },\n              children: _jsx(Text, {\n                size: \"md\",\n                fontWeight: \"bold\",\n                style: {\n                  marginLeft: 5\n                },\n                children: isDarkmode ? \"‚òÄÔ∏è light theme\" : \"üåë dark theme\"\n              })\n            })\n          })]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","getAuth","createUserWithEmailAndPassword","Layout","Text","TextInput","Button","useTheme","themeColor","navigation","isDarkmode","setTheme","auth","email","setEmail","password","setPassword","loading","setLoading","register","catch","error","errorCode","code","errorMessage","message","alert","flex","flexGrow","justifyContent","alignItems","backgroundColor","white100","height","width","require","paddingHorizontal","paddingBottom","dark","white","alignSelf","padding","marginTop","text","flexDirection","navigate","marginLeft"],"sources":["C:/Users/supor/Downloads/Study/Zulu/src/screens/auth/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  View,\r\n  KeyboardAvoidingView,\r\n  Image,\r\n} from \"react-native\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport {\r\n  Layout,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  useTheme,\r\n  themeColor,\r\n} from \"react-native-rapi-ui\";\r\n\r\nexport default function ({ navigation }) {\r\n  const { isDarkmode, setTheme } = useTheme();\r\n  const auth = getAuth();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function register() {\r\n    setLoading(true);\r\n    await createUserWithEmailAndPassword(auth, email, password).catch(function (\r\n      error\r\n    ) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // ...\r\n      setLoading(false);\r\n      alert(errorMessage);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"height\" enabled style={{ flex: 1 }}>\r\n      <Layout>\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            flexGrow: 1,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundColor: isDarkmode ? \"#17171E\" : themeColor.white100,\r\n            }}\r\n          >\r\n            <Image\r\n              resizeMode=\"contain\"\r\n              style={{\r\n                height: 220,\r\n                width: 220,\r\n              }}\r\n              source={require(\"../../../assets/register.png\")}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{\r\n              flex: 3,\r\n              paddingHorizontal: 20,\r\n              paddingBottom: 20,\r\n              backgroundColor: isDarkmode ? themeColor.dark : themeColor.white,\r\n            }}\r\n          >\r\n            <Text\r\n              fontWeight=\"bold\"\r\n              size=\"h3\"\r\n              style={{\r\n                alignSelf: \"center\",\r\n                padding: 30,\r\n              }}\r\n            >\r\n              Register\r\n            </Text>\r\n            <Text>Email</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              keyboardType=\"email-address\"\r\n              onChangeText={(text) => setEmail(text)}\r\n            />\r\n\r\n            <Text style={{ marginTop: 15 }}>Password</Text>\r\n            <TextInput\r\n              containerStyle={{ marginTop: 15 }}\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              autoCapitalize=\"none\"\r\n              autoCompleteType=\"off\"\r\n              autoCorrect={false}\r\n              secureTextEntry={true}\r\n              onChangeText={(text) => setPassword(text)}\r\n            />\r\n            <Button\r\n              text={loading ? \"Loading\" : \"Create an account\"}\r\n              onPress={() => {\r\n                register();\r\n              }}\r\n              style={{\r\n                marginTop: 20,\r\n              }}\r\n              disabled={loading}\r\n            />\r\n\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 15,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Text size=\"md\">Already have an account?</Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  navigation.navigate(\"Login\");\r\n                }}\r\n              >\r\n                <Text\r\n                  size=\"md\"\r\n                  fontWeight=\"bold\"\r\n                  style={{\r\n                    marginLeft: 5,\r\n                  }}\r\n                >\r\n                  Login here\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 30,\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  isDarkmode ? setTheme(\"light\") : setTheme(\"dark\");\r\n                }}\r\n              >\r\n                <Text\r\n                  size=\"md\"\r\n                  fontWeight=\"bold\"\r\n                  style={{\r\n                    marginLeft: 5,\r\n                  }}\r\n                >\r\n                  {isDarkmode ? \"‚òÄÔ∏è light theme\" : \"üåë dark theme\"}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </Layout>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}