{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { useTheme, themeColor } from \"react-native-rapi-ui\";\nimport TabBarIcon from \"../components/utils/TabBarIcon\";\nimport TabBarText from \"../components/utils/TabBarText\";\nimport Home from \"../screens/Home\";\nimport SecondScreen from \"../screens/Consulta\";\nimport About from \"../screens/About\";\nimport Profile from \"../screens/Profile\";\nimport Loading from \"../screens/utils/Loading\";\nimport Login from \"../screens/auth/Login\";\nimport Register from \"../screens/auth/Register\";\nimport ForgetPassword from \"../screens/auth/ForgetPassword\";\nimport { AuthContext } from \"../provider/AuthProvider\";\nimport Consulta from \"../screens/Consulta\";\nimport Diario from \"../screens/Diario\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDILMAX5DEPAVzBH8LxTxbudNgtbt1zxEA\",\n  authDomain: \"loginaut-15518.firebaseapp.com\",\n  projectId: \"loginaut-15518\",\n  storageBucket: \"loginaut-15518.appspot.com\",\n  messagingSenderId: \"370820787726\",\n  appId: \"1:370820787726:web:a88a5dee50f3878487565f\",\n  measurementId: \"G-B33VN2DNJC\"\n};\nif (getApps().length === 0) {\n  initializeApp(firebaseConfig);\n}\nvar AuthStack = createNativeStackNavigator();\nvar Auth = function Auth() {\n  return _jsxs(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(AuthStack.Screen, {\n      name: \"Login\",\n      component: Login\n    }), _jsx(AuthStack.Screen, {\n      name: \"Register\",\n      component: Register\n    }), _jsx(AuthStack.Screen, {\n      name: \"ForgetPassword\",\n      component: ForgetPassword\n    })]\n  });\n};\nvar MainStack = createNativeStackNavigator();\nvar Main = function Main() {\n  return _jsxs(MainStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(MainStack.Screen, {\n      name: \"MainTabs\",\n      component: MainTabs\n    }), _jsx(MainStack.Screen, {\n      name: \"Consulta\",\n      component: Consulta\n    }), _jsx(MainStack.Screen, {\n      name: \"Diario\",\n      component: Diario\n    })]\n  });\n};\nvar Tabs = createBottomTabNavigator();\nvar MainTabs = function MainTabs() {\n  var _useTheme = useTheme(),\n    isDarkmode = _useTheme.isDarkmode;\n  return _jsxs(Tabs.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarStyle: {\n        borderTopColor: isDarkmode ? themeColor.dark100 : \"#c0c0c0\",\n        backgroundColor: isDarkmode ? themeColor.dark200 : \"#ffffff\"\n      }\n    },\n    children: [_jsx(Tabs.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref) {\n          var focused = _ref.focused;\n          return _jsx(TabBarText, {\n            focused: focused,\n            title: \"Home\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            icon: \"md-home\"\n          });\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(TabBarText, {\n            focused: focused,\n            title: \"Profile\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            icon: \"person\"\n          });\n        }\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"About\",\n      component: About,\n      options: {\n        tabBarLabel: function tabBarLabel(_ref5) {\n          var focused = _ref5.focused;\n          return _jsx(TabBarText, {\n            focused: focused,\n            title: \"About\"\n          });\n        },\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var focused = _ref6.focused;\n          return _jsx(TabBarIcon, {\n            focused: focused,\n            icon: \"ios-information-circle\"\n          });\n        }\n      }\n    })]\n  });\n};\nexport default (function () {\n  var auth = useContext(AuthContext);\n  var user = auth.user;\n  return _jsxs(NavigationContainer, {\n    children: [user == null && _jsx(Loading, {}), user == false && _jsx(Auth, {}), user == true && _jsx(Main, {})]\n  });\n});","map":{"version":3,"names":["React","useContext","initializeApp","getApps","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","useTheme","themeColor","TabBarIcon","TabBarText","Home","SecondScreen","About","Profile","Loading","Login","Register","ForgetPassword","AuthContext","Consulta","Diario","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","length","AuthStack","Auth","headerShown","MainStack","Main","MainTabs","Tabs","isDarkmode","tabBarStyle","borderTopColor","dark100","backgroundColor","dark200","tabBarLabel","focused","tabBarIcon","auth","user"],"sources":["C:/Users/supor/Downloads/Study/Zulu/src/navigation/AppNavigator.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\nimport { useTheme, themeColor } from \"react-native-rapi-ui\";\r\nimport TabBarIcon from \"../components/utils/TabBarIcon\";\r\nimport TabBarText from \"../components/utils/TabBarText\";\r\n\r\n//Screens\r\nimport Home from \"../screens/Home\";\r\nimport SecondScreen from \"../screens/Consulta\";\r\nimport About from \"../screens/About\";\r\nimport Profile from \"../screens/Profile\";\r\nimport Loading from \"../screens/utils/Loading\";\r\n// Auth screens\r\nimport Login from \"../screens/auth/Login\";\r\nimport Register from \"../screens/auth/Register\";\r\nimport ForgetPassword from \"../screens/auth/ForgetPassword\";\r\nimport { AuthContext } from \"../provider/AuthProvider\";\r\nimport Consulta from \"../screens/Consulta\";\r\nimport Diario from \"../screens/Diario\";\r\n\r\n// Better put your these secret keys in .env file\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDILMAX5DEPAVzBH8LxTxbudNgtbt1zxEA\",\r\n  authDomain: \"loginaut-15518.firebaseapp.com\",\r\n  projectId: \"loginaut-15518\",\r\n  storageBucket: \"loginaut-15518.appspot.com\",\r\n  messagingSenderId: \"370820787726\",\r\n  appId: \"1:370820787726:web:a88a5dee50f3878487565f\",\r\n  measurementId: \"G-B33VN2DNJC\"\r\n};\r\n\r\nif (getApps().length === 0) {\r\n  initializeApp(firebaseConfig);\r\n}\r\n\r\nconst AuthStack = createNativeStackNavigator();\r\nconst Auth = () => {\r\n  return (\r\n    <AuthStack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <AuthStack.Screen name=\"Login\" component={Login} />\r\n      <AuthStack.Screen name=\"Register\" component={Register} />\r\n      <AuthStack.Screen name=\"ForgetPassword\" component={ForgetPassword} />\r\n    </AuthStack.Navigator>\r\n  );\r\n};\r\n\r\nconst MainStack = createNativeStackNavigator();\r\nconst Main = () => {\r\n  return (\r\n    <MainStack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <MainStack.Screen name=\"MainTabs\" component={MainTabs} />\r\n      <MainStack.Screen name=\"Consulta\" component={Consulta} />\r\n      <MainStack.Screen name=\"Diario\" component={Diario} />\r\n    </MainStack.Navigator>\r\n  );\r\n};\r\n\r\nconst Tabs = createBottomTabNavigator();\r\nconst MainTabs = () => {\r\n  const { isDarkmode } = useTheme();\r\n  return (\r\n    <Tabs.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          borderTopColor: isDarkmode ? themeColor.dark100 : \"#c0c0c0\",\r\n          backgroundColor: isDarkmode ? themeColor.dark200 : \"#ffffff\",\r\n        },\r\n      }}\r\n    >\r\n      {/* these icons using Ionicons */}\r\n      <Tabs.Screen\r\n        name=\"Home\"\r\n        component={Home}\r\n        options={{\r\n          tabBarLabel: ({ focused }) => (\r\n            <TabBarText focused={focused} title=\"Home\" />\r\n          ),\r\n          tabBarIcon: ({ focused }) => (\r\n            <TabBarIcon focused={focused} icon={\"md-home\"} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tabs.Screen\r\n        name=\"Profile\"\r\n        component={Profile}\r\n        options={{\r\n          tabBarLabel: ({ focused }) => (\r\n            <TabBarText focused={focused} title=\"Profile\" />\r\n          ),\r\n          tabBarIcon: ({ focused }) => (\r\n            <TabBarIcon focused={focused} icon={\"person\"} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tabs.Screen\r\n        name=\"About\"\r\n        component={About}\r\n        options={{\r\n          tabBarLabel: ({ focused }) => (\r\n            <TabBarText focused={focused} title=\"About\" />\r\n          ),\r\n          tabBarIcon: ({ focused }) => (\r\n            <TabBarIcon focused={focused} icon={\"ios-information-circle\"} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tabs.Navigator>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const auth = useContext(AuthContext);\r\n  const user = auth.user;\r\n  return (\r\n    <NavigationContainer>\r\n      {user == null && <Loading />}\r\n      {user == false && <Auth />}\r\n      {user == true && <Main />}\r\n    </NavigationContainer>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}